# .NET i√ßin telemetri takibini √∂nle:
DOTNET_CLI_TELEMETRY_OPTOUT=1

eval "$(/opt/homebrew/bin/brew shellenv)"

# If you come from bash you might have to change your $PATH.
# export PATH=$PATH:$HOME/bin:/usr/local/bin

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
# MY THEMES:
# ZSH_THEME="wezm+" # üêö ~/path on ÓÇ† master! ‚åö 14:21:59
# ZSH_THEME="amuse" # ~/path on ÓÇ† master! ‚åö 14:21:59
# ZSH_THEME="suvash" # ‚ï≠‚îÄtutkun at MacBook-Pro in ~/.oh-my-zsh on master!
# ZSH_THEME="sunrise" # --- ~/.oh-my-zsh ‚Äπmaster* ?‚Ä∫ ¬ª 
# ZSH_THEME="norm" # Œª MacBook-Pro .oh-my-zsh ‚Üí Œª git master* ‚Üí
# ZSH_THEME="strug" # ‚ï≠‚îÄtutkun@MacBook-Pro in ~/.oh-my-zsh on master ‚úò (origin/master -77)
# ZSH_THEME="jnrowe" # Œû ~/.oh-my-zsh git:(master) ‚ñ∂ 
# ZSH_THEME="nebirhos" # @MacBook-Pro ‚ûú .oh-my-zsh git:(master) ‚úó 
# ZSH_THEME="wedisagree" # [~/path] <--sol---||||---saƒü--> 14:22:41  ‚òÅ  master ‚òÇ ‚ú≠
ZSH_THEME="passion" # set by `omz`


# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "passion" "agnoster" "avit" "af-magic" "bira" "daveverwer" "mikeh" "robbyrussell" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
COMPLETION_WAITING_DOTS="%F{yellow}Tamamlanmasƒ± bekleniyor...%f"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM="$ZSH/other-custom-directory"

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  git
  bundler
  dotenv
  macos
  rake
  rbenv
  ruby
  zsh-autosuggestions
  zsh-syntax-highlighting
  colorize
  command-not-found
  compleat
  alias-finder
  frontend-search
  themes
  sublime
  gh
  common-aliases
  create-nextjs-app
  webos-tv-cli
)

# You may need to manually set your language environment
export LANG=tr_TR.UTF-8
export LC_ALL=tr_TR.UTF-8

source $ZSH/oh-my-zsh.sh

# USER CONFIGURATIONS
################################

# export MANPATH="/usr/local/man:$MANPATH"

# Android Studio i√ßin JAVA_HOME tanƒ±mlamasƒ±:
# export JAVA_HOME=/usr/libexec/java_home

# Node@18
export LDFLAGS="-L/usr/local/opt/node@18/lib"
export CPPFLAGS="-I/usr/local/opt/node@18/include"
export PATH="/usr/local/opt/node@18/bin:$PATH"

# Brew intell mac i√ßin:
export PATH="/usr/local/sbin:/usr/local/bin:$PATH"

# Flutter SDK Yolunu Belirtiyoruz:
export PATH="$PATH:$HOME/flutter-sdk/bin:$HOME/.pub-cache/bin"

# Yarn using
export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"

# Visual Studio Code (code)
export PATH="$PATH:/Applications/Code.app/Contents/Resources/app/bin"

# Pnpm
export PNPM_HOME="$HOME/.pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# Pnpm End

# Ninja adlƒ± vscode plugin i√ßin
PATH=~/.console-ninja/.bin:$PATH

# Ruby g√ºncelleme vs kontrol√º i√ßin rbenv y√ºkleniyor
# eval "$(~/.rbenv/bin/rbenv init - zsh)"

# Bun completions
[ -s "$HOME/.bun/_bun" ] && source "$HOME/.bun/_bun"

# Jekyll i√ßin Ruby Kurulum Ayarlarƒ±:
# source $(brew --prefix)/opt/chruby/share/chruby/chruby.sh
# source $(brew --prefix)/opt/chruby/share/chruby/auto.sh
# chruby ruby

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
alias zshconfig="code ~/.zshrc"
alias ohmyzsh="code ~/.oh-my-zsh"

# flutter create --org com.newcompany --project-name newproject .
alias create-new-flutter-project="flutter create --org com.tutkuns --project-name "

# HELPER FUNCTIONS:
# =================

# GitHub Projesi olu≈üturma yardƒ±mƒ±
# create-nextjs-app () {
#     # CURR_DIR=$PWD
#     DIR=$HOME/Developer/sites
#     PROJECT_DIR=$DIR/$1
#     if [ -d "$PROJECT_DIR" ]; then
#         echo "\n\e[31mUYARI:\e[m" "\t\e[31m$1\e[m \e[32mdizini zaten mevcut. Bu i≈ülem dizindeki verileri korumak i√ßin durduruldu.\e[m\n" "\t\e[34m$DIR/\e[31m$1\e[m\e[m\n"
#     else
#         # NextJS projesi √ßekiliyor
#         # npx create-next-app $PROJECT_DIR --use-npm --example "https://github.com/vercel/next-learn/tree/master/basics/learn-starter"
#         git clone https://github.com/tutkun/nextjs-webapp-template $PROJECT_DIR
#         rm -rf $PROJECT_DIR/.git/
#         # Projenin Kurulacaƒüƒ± Dizine Ge√ß
#         cd $PROJECT_DIR
#         echo "$(PROJECT_DIR) dizinine ge√ßi≈ü yapƒ±ldƒ±..."        
#         # Git ile Projeye Dosyalarƒ± Ekle
#         git init
#         git add .
#         git commit -m "Uzay yolculuƒüu ba≈üladƒ±... üöÄ"
#         git branch -M master
#         git remote add origin https://github.com/tutkun/$1.git
#         git push -u origin master

#         # Bir √ñnceki Dizine Geri D√∂n
#         echo "Bir √∂nceki dizin olan \"$(-)\" dizine ge√ßi≈ü yapƒ±lƒ±yor..."
#         cd -
#     fi;
# }
